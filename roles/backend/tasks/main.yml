#- name: backend Setup
#  hosts: all
#  become: yes
#  tasks:
#verify nodejs in the system
    - name: verify nodejs
      ansible.builtin.shell: type npm
      register: npm
      ignore_errors: yes

    - name: Install NodeJS
      ansible.builtin.shell: curl -sL https://rpm.nodesource.com/setup_lts.x | bash
      when: npm.rc != 0

    - name: Install nodeJS
      ansible.builtin.dnf:
        name: nodejs
      when: npm.rc != 0

    - name: copy Backend service file
      ansible.builtin.template:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: add application user
      ansible.builtin.user:
        name: expense


#    - name: removing old content
#      ansible.builtin.file:
#        path: /app
#        state: absent
#
#    - name: creating app directory
#      ansible.builtin.file:
#        path: /app
#        state: directory
#
#    - name: Download backend code and extract backend code
#      ansible.builtin.unarchive:
#        src: https://expense-artifacts.s3.amazonaws.com/backend.zip
#        dest: /app
#        remote_src: yes
    - name: set hostname
      ansible.builtin.shell: set-hostname backend

    - name: include app pre-requisites
      ansible.builtin.import_role:
        name: common
        tasks_from: app_prerequisites


    - name: install nodejs dependencies
      ansible.builtin.shell: npm install
      args:
        chdir: /app

    - name: install mysql client
      ansible.builtin.dnf:
        name: mysql

    - name: load schema
      ansible.builtin.shell: mysql -h m1.tanvi12online.net -uroot -pExpenseApp@1 < /app/schema/backend.sql

    - name: start backend service
      ansible.builtin.systemd:
        name: backend
        state: restarted
        enabled: yes
        daemon-reload: yes


